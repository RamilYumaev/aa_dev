<?php

namespace modules\entrant\modules\ones_2024\model;
use dictionary\models\Faculty;
use modules\usecase\ImageUploadBehaviorYiiPhp;
use yii\db\ActiveRecord;
use yii\web\UploadedFile;

/**
 * @property int $id
 * @property string $name
 * @property string $faculty_id
 * @property string $education_level
 * @property string $education_form
 * @property string $speciality
 * @property string $code_spec
 * @property string $profile
 * @property string $type
 * @property string $quid
 * @property integer $status
 * @property integer $kcp
 * @property string $url
 * @property string $datetime_url
 * @property integer $datetime_update_fok
 * @property integer $datetime_view
 * @property string  $file
 *
 */
class CgSS extends ActiveRecord
{
    public $check;

    public static function tableName(): string
    {
        return '{{%cg_2024_ss}}';
    }

    public function rules(): array
    {
        return [
            [['education_level', 'education_form', 'speciality', 'profile', 'type'], 'required'],
            [['name', 'education_level', 'education_form', 'code_spec', 'speciality', 'profile', 'type', 'quid'], 'string'],
            [['name', 'education_level', 'education_form', 'code_spec', 'speciality', 'profile', 'type'], 'trim'],
            [['kcp'], 'integer', 'max' => 999, 'min' => 0],
            [['url', 'datetime_url','datetime_update_fok', 'datetime_view' ], 'safe' ],
            [['name'], 'unique'],
            [['url'],'url', 'defaultScheme' => ''],
            [['faculty_id'], 'integer'],
            ['file', 'file', 'extensions' => 'xlsx'],
        ];
    }

    public function attributeLabels(): array
    {
        return [
            'name' => "Наименование",
            'education_level' => "Уровень образования",
            'education_form' => "Форма обучения",
            'faculty_id' => "Факультет/Филиал",
            'speciality' => "Направление подготовки",
            'code_spec' => " Код",
            'profile' => "Профиль",
            'type' => "Вид мест",
            'kcp' => 'КЦП',
            'quid' => "quid",
            'status' => 'Статус', 
            'url' => 'URL КC epk24.mpgu.su',
            'datetime_url'=> "Дата последнего запроса epk24.mpgu.su",
            'datetime_update_fok' => "Дата обновления списка ФОК" , 
            'datetime_view' => 'Дата обновления для абитуриента'
        ];
    }

    public function beforeSave($insert)
    {
        if($this->file) {
             $this->file = UploadedFile::getInstance($this, 'file');
        }
        if($this->url) {
            $url = $this->url;
            parse_str(parse_url($url, PHP_URL_QUERY), $out);
            if(key_exists('scenarioN', $out)) {
                if(preg_match('/^[^ ].* .*[^ ]$/', $out['scenarioN'])) {
                    $out['scenarioN'] = rawurlencode($out['scenarioN']);
                }
            }

            $this->url = parse_url($url, PHP_URL_SCHEME)."://".parse_url($url, PHP_URL_HOST).parse_url($url, PHP_URL_PATH)."?".http_build_query($out);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getEntrantsApp() {
        return $this->hasMany(EntrantCgAppSS::class,['quid_cg_competitive' => 'quid'])
            ->select('quid_profile')->groupBy('quid_profile');
    }

    public function getFaculty() {
        return $this->hasOne(Faculty::class,['id' => 'faculty_id']);
    }

    public function getAppDifferentPriorities() {
        return $this->getEntrantsApp()->andWhere('priority_vuz <> priority_ss');
    }

    public function getAppEmptyVuzPriorities() {
        return $this->getEntrantsApp()->andWhere('priority_vuz IS NULL');
    }

    public function getPathEpk() {
      return'/entrant/files/ss/' . $this->id;
    }

    public function getPathFullEpk() {
        return \Yii::getAlias('@modules').$this->getPathEpk();
    }

    public function getFile() {
        return 'epk.json';
    }

    public function getFileFok() {
        return 'fok.json';
    }

    public function getList() {
        if(!file_exists($this->getPathFullEpk().'/'.$this->getFile())) {
            return  [];
        }

        $file = file_get_contents($this->getPathFullEpk().'/'.$this->getFile());
        if($file) {
            return json_decode($file, true);
        }
        return  [];
    }

    public function getListFok() {
        if(!file_exists($this->getPathFullEpk().'/'.$this->getFileFok())) {
            return  [];
        }

        $file = file_get_contents($this->getPathFullEpk().'/'.$this->getFileFok());
        if($file) {
            return json_decode($file, true);
        }
        return  [];
    }

    public function getListCount() {
        return count($this->getList());
    }

    public function getListNotRank() {
        $list = $this->getList();
        if($list) {
            $list = array_filter($list, function ($b) {
                return empty($b['number']);
            });
        }
        return $list;
    }

    public function getListWithRank() {
        $list = $this->getList();
        if($list) {
            $list = array_filter($list, function ($b) {
                return !empty($b['number']);
            });
        }
        return $list;
    }

    public function getListFokCount() {
        return count($this->getListFok());
    }

    public function behaviors()
    {
        return [
            [
                'class' => ImageUploadBehaviorYiiPhp::class,
                'attribute' => 'file',
                'filePath' => '@modules/entrant/files/ss_n/[[attribute_id]]/[[attribute_file]]',
            ],
        ];
    }
}
